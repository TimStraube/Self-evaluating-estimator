[tool.poetry]
name = "see"
version = "0.1.0"
description = "Self Evaluating Estimator - A reinforcement learning architecture with memory-based reward computation"
authors = ["Tim Straube <tim.straube@example.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/timstraube/SEE"
repository = "https://github.com/timstraube/SEE"
documentation = "https://github.com/timstraube/SEE/blob/main/README.md"
keywords = ["reinforcement-learning", "ai", "memory", "perception", "battleship"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = ">=3.9"
numpy = ">=1.26.0,<2.0.0"
gymnasium = ">=0.28.0"
stable-baselines3 = {extras = ["extra"], version = ">=2.0.0"}
matplotlib = ">=3.5.0"
PyQt6 = ">=6.0.0"
torch = ">=1.12.0"
tensorflow = ">=2.10.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.0.0"
pytest-cov = ">=4.0.0"
black = ">=22.0.0"
flake8 = ">=5.0.0"
mypy = ">=1.0.0"
pre-commit = ">=2.20.0"

[tool.poetry.group.docs.dependencies]
sphinx = ">=5.0.0"
sphinx-rtd-theme = ">=1.0.0"
myst-parser = ">=0.18.0"

[tool.poetry.group.gui.dependencies]
PyQt6 = ">=6.0.0"
matplotlib = ">=3.5.0"

[tool.poetry.scripts]
see-gui = "src.gui.main:main"
see-train = "src.agent:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Black code formatter
[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Flake8 linter
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist"
]

# MyPy type checker
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "stable_baselines3.*",
    "gymnasium.*",
    "matplotlib.*",
    "PyQt6.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]